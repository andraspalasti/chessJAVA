package chess.core;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

import chess.core.Board.IllegalMove;

public class MoveGenerationTest {
    @Test
    public void moveGenerationTest() {
        String fen = "rnbq1k1r/pp1Pbppp/2p5/8/2B5/8/PPP1NnPP/RNBQK2R w KQ - 1 8";
        Board board = new Board();
        board.mustLoadFEN(fen);
        assertEquals(countPositions(board, 1), 41);
    }

    public int countPositions(Board board, int depth) {
        if (depth <= 0) {
            return 1;
        }

        int positions = 0;
        for (Move move : board.generateMoves()) {
            try {
                board.makeMove(move);
                positions += countPositions(board, depth - 1);
                board.undoMove();
            } catch (IllegalMove e) {
                // This exception is not possible because we are only playing moves that were
                // generated by the board
            }
        }
        return positions;
    }
}
